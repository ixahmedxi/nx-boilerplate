{
  "name": "server",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "packages/server/src",
  "projectType": "library",
  "targets": {
    "build": {
      "executor": "@nrwl/vite:build",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/packages/server"
      }
    },
    "publish": {
      "executor": "nx:run-commands",
      "options": {
        "command": "node tools/scripts/publish.mjs server {args.ver} {args.tag}"
      },
      "dependsOn": ["build"]
    },
    "test": {
      "executor": "@nrwl/vite:test",
      "outputs": ["coverage/packages/server"],
      "options": {
        "passWithNoTests": true,
        "reportsDirectory": "../../coverage/packages/server"
      }
    },
    "lint": {
      "executor": "@nrwl/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["packages/server/**/*.ts"]
      }
    },
    "typecheck": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          {
            "command": "pnpm exec tsc --noEmit -p packages/server/tsconfig.lib.json"
          }
        ],
        "outputPath": "packages/server/tsconfig.tsbuildinfo"
      },
      "outputs": ["{options.outputPath}"]
    },
    "prisma-seed": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          {
            "command": "pnpm exec ts-node --compiler-options {\\\"module\\\":\\\"CommonJS\\\"} packages/server/prisma/seed.test.ts"
          }
        ]
      },
      "dependsOn": ["prisma-push"]
    },
    "prisma-format": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          {
            "command": "pnpm exec prisma format --schema packages/server/prisma/schema.prisma"
          }
        ]
      }
    },
    "prisma-generate": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          {
            "command": "pnpm exec prisma generate --schema packages/server/prisma/schema.prisma"
          }
        ]
      }
    },
    "prisma-migrate": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          {
            "command": "pnpm exec prisma migrate dev --schema packages/server/prisma/schema.prisma"
          }
        ]
      }
    },
    "prisma-pull": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          {
            "command": "pnpm exec prisma db pull --schema packages/server/prisma/schema.prisma"
          }
        ]
      }
    },
    "prisma-push": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          {
            "command": "pnpm exec prisma db push --schema packages/server/prisma/schema.prisma"
          }
        ]
      }
    },
    "prisma-deploy": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          {
            "command": "pnpm exec prisma deploy --schema packages/server/prisma/schema.prisma"
          }
        ]
      }
    },
    "prisma-status": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          {
            "command": "pnpm exec prisma db status --schema packages/server/prisma/schema.prisma"
          }
        ]
      }
    },
    "prisma-studio": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          {
            "command": "pnpm exec prisma studio --schema packages/server/prisma/schema.prisma"
          }
        ]
      }
    }
  },
  "tags": []
}
